name: CI (main and tags)
on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
permissions:
  checks: write
  contents: write
  packages: write
  pull-requests: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
jobs:
  test-and-clippy:
    name: Unit testing and linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install SQLite3
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev
      - run: cargo test --all-features
      - run: cargo clippy

  docker-clean-metadata:
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.meta.outputs.json }}
    steps:
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=semver,pattern={{raw}}

  docker-build:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        include:
          - os: self-hosted
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=semver,pattern={{raw}}
          flavor: |
            latest=auto
            suffix=-${{ matrix.arch }},onlatest=true
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-manifest:
    needs:
      - docker-build
      - docker-clean-metadata
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: ${{ fromJson(needs.docker-clean-metadata.outputs.json).tags }}

    steps:
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ matrix.image }} ${{ matrix.image }}-amd64 ${{ matrix.image }}-arm64
          docker manifest push ${{ matrix.image }}
